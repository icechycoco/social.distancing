{"ast":null,"code":"import { useState, useRef, useEffect, isValidElement, cloneElement, createElement } from 'react';\nimport { useFormContext } from 'react-hook-form';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nconst isUndefined = val => val === undefined;\n\nfunction getValue(target, {\n  isCheckbox\n}) {\n  // the following logic is specific for react-select\n  if (target && (Array.isArray(target) || target.label && target.value)) {\n    return target;\n  }\n\n  return target ? isCheckbox ? isUndefined(target.checked) ? target : target.checked : isUndefined(target.value) ? target : target.value : target;\n}\n\nconst RHFInput = _a => {\n  var {\n    innerProps,\n    setValue: setValueFromProp,\n    register: registerFromProp,\n    unregister: unregisterFromProp,\n    name,\n    rules,\n    mode = 'onSubmit',\n    as: InnerComponent,\n    onChange,\n    onBlur,\n    type,\n    value,\n    defaultValue,\n    defaultChecked,\n    onChangeName,\n    onChangeEvent,\n    onBlurName,\n    onBlurEvent\n  } = _a,\n      rest = __rest(_a, [\"innerProps\", \"setValue\", \"register\", \"unregister\", \"name\", \"rules\", \"mode\", \"as\", \"onChange\", \"onBlur\", \"type\", \"value\", \"defaultValue\", \"defaultChecked\", \"onChangeName\", \"onChangeEvent\", \"onBlurName\", \"onBlurEvent\"]);\n\n  const isCheckbox = type === 'checkbox';\n  const isOnChange = mode === 'onChange';\n  const isOnBlur = mode === 'onBlur';\n  const defaultData = isCheckbox ? isUndefined(defaultChecked) ? false : defaultChecked : defaultValue;\n  const [inputValue, setInputValue] = useState(defaultData);\n  const valueRef = useRef(defaultData);\n  const methods = useFormContext() || {};\n  const setValue = setValueFromProp || methods.setValue;\n  const register = registerFromProp || methods.register;\n  const unregister = unregisterFromProp || methods.unregister;\n\n  const commonTask = target => {\n    const data = getValue(target, {\n      isCheckbox\n    });\n    setInputValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const eventWrapper = (event, eventName) => {\n    return async (...arg) => {\n      const data = commonTask((await event(arg)));\n      setValue(name, data, isOnChange && eventName === 'onChange' || isOnBlur && eventName === 'onBlur');\n    };\n  };\n\n  const handleChange = e => {\n    const data = commonTask(e && e.target ? e.target : e);\n    setValue(name, data, isOnChange);\n\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  const handleBlur = e => {\n    const data = commonTask(e && e.target ? e.target : e);\n    setValue(name, data, isOnBlur);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  useEffect(() => {\n    register(Object.defineProperty({\n      name\n    }, 'value', {\n      set(data) {\n        setInputValue(data);\n        valueRef.current = data;\n      },\n\n      get() {\n        return valueRef.current;\n      }\n\n    }), Object.assign({}, rules));\n    return () => {\n      if (unregister) {\n        unregister(name);\n      }\n    };\n  }, [register, unregister, name]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const props = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, innerProps), onChangeEvent ? {\n    [onChangeName || 'onChange']: eventWrapper(onChangeEvent, 'onChange')\n  } : {\n    onChange: handleChange\n  }), isOnBlur ? onBlurEvent ? {\n    [onBlurName || 'onBlur']: eventWrapper(onBlurEvent, 'onBlur')\n  } : {\n    onBlur: handleBlur\n  } : {}), {\n    value: inputValue || value || ''\n  }), isCheckbox ? {\n    checked: inputValue\n  } : {}), rest);\n  return isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, Object.assign({}, props));\n};\n\nexport { RHFInput };","map":{"version":3,"sources":["/Users/icechycoco/Desktop/project/DJW20/social.distancing/node_modules/react-hook-form-input/dist/index.es.js"],"names":["useState","useRef","useEffect","isValidElement","cloneElement","createElement","useFormContext","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","isUndefined","val","undefined","getValue","target","isCheckbox","Array","isArray","label","value","checked","RHFInput","_a","innerProps","setValue","setValueFromProp","register","registerFromProp","unregister","unregisterFromProp","name","rules","mode","as","InnerComponent","onChange","onBlur","type","defaultValue","defaultChecked","onChangeName","onChangeEvent","onBlurName","onBlurEvent","rest","isOnChange","isOnBlur","defaultData","inputValue","setInputValue","valueRef","methods","commonTask","data","current","eventWrapper","event","eventName","arg","handleChange","handleBlur","defineProperty","set","get","assign","props"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, isValidElement, cloneElement, createElement } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst isUndefined = (val) => val === undefined;\r\nfunction getValue(target, { isCheckbox }) {\r\n    // the following logic is specific for react-select\r\n    if (target && (Array.isArray(target) || (target.label && target.value))) {\r\n        return target;\r\n    }\r\n    return target\r\n        ? isCheckbox\r\n            ? isUndefined(target.checked)\r\n                ? target\r\n                : target.checked\r\n            : isUndefined(target.value)\r\n                ? target\r\n                : target.value\r\n        : target;\r\n}\r\nconst RHFInput = (_a) => {\r\n    var { innerProps, setValue: setValueFromProp, register: registerFromProp, unregister: unregisterFromProp, name, rules, mode = 'onSubmit', as: InnerComponent, onChange, onBlur, type, value, defaultValue, defaultChecked, onChangeName, onChangeEvent, onBlurName, onBlurEvent } = _a, rest = __rest(_a, [\"innerProps\", \"setValue\", \"register\", \"unregister\", \"name\", \"rules\", \"mode\", \"as\", \"onChange\", \"onBlur\", \"type\", \"value\", \"defaultValue\", \"defaultChecked\", \"onChangeName\", \"onChangeEvent\", \"onBlurName\", \"onBlurEvent\"]);\r\n    const isCheckbox = type === 'checkbox';\r\n    const isOnChange = mode === 'onChange';\r\n    const isOnBlur = mode === 'onBlur';\r\n    const defaultData = isCheckbox\r\n        ? isUndefined(defaultChecked)\r\n            ? false\r\n            : defaultChecked\r\n        : defaultValue;\r\n    const [inputValue, setInputValue] = useState(defaultData);\r\n    const valueRef = useRef(defaultData);\r\n    const methods = useFormContext() || {};\r\n    const setValue = setValueFromProp || methods.setValue;\r\n    const register = registerFromProp || methods.register;\r\n    const unregister = unregisterFromProp || methods.unregister;\r\n    const commonTask = (target) => {\r\n        const data = getValue(target, { isCheckbox });\r\n        setInputValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    };\r\n    const eventWrapper = (event, eventName) => {\r\n        return async (...arg) => {\r\n            const data = commonTask(await event(arg));\r\n            setValue(name, data, (isOnChange && eventName === 'onChange') ||\r\n                (isOnBlur && eventName === 'onBlur'));\r\n        };\r\n    };\r\n    const handleChange = (e) => {\r\n        const data = commonTask(e && e.target ? e.target : e);\r\n        setValue(name, data, isOnChange);\r\n        if (onChange) {\r\n            onChange(e);\r\n        }\r\n    };\r\n    const handleBlur = (e) => {\r\n        const data = commonTask(e && e.target ? e.target : e);\r\n        setValue(name, data, isOnBlur);\r\n        if (onBlur) {\r\n            onBlur(e);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        register(Object.defineProperty({\r\n            name,\r\n        }, 'value', {\r\n            set(data) {\r\n                setInputValue(data);\r\n                valueRef.current = data;\r\n            },\r\n            get() {\r\n                return valueRef.current;\r\n            },\r\n        }), Object.assign({}, rules));\r\n        return () => {\r\n            if (unregister) {\r\n                unregister(name);\r\n            }\r\n        };\r\n    }, [register, unregister, name]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    const props = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, innerProps), (onChangeEvent\r\n        ? {\r\n            [onChangeName || 'onChange']: eventWrapper(onChangeEvent, 'onChange'),\r\n        }\r\n        : { onChange: handleChange })), (isOnBlur\r\n        ? onBlurEvent\r\n            ? {\r\n                [onBlurName || 'onBlur']: eventWrapper(onBlurEvent, 'onBlur'),\r\n            }\r\n            : { onBlur: handleBlur }\r\n        : {})), { value: inputValue || value || '' }), (isCheckbox ? { checked: inputValue } : {})), rest);\r\n    return isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, Object.assign({}, props)));\r\n};\n\nexport { RHFInput };\n"]},"metadata":{},"sourceType":"module"}